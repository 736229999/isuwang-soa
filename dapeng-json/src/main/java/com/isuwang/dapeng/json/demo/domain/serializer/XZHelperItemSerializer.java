 package com.isuwang.dapeng.json.demo.domain.serializer;
        import com.isuwang.dapeng.json.demo.domain.serializer.*;

        import com.isuwang.dapeng.core.*;
        import com.isuwang.org.apache.thrift.*;
        import com.isuwang.org.apache.thrift.protocol.*;

        import java.util.Optional;
        import java.util.concurrent.CompletableFuture;
        import java.util.concurrent.Future;

        /**
        * Autogenerated by Dapeng-Code-Generator (1.2.2)
        *
        * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
        *  @generated
        **/
        public class XZHelperItemSerializer implements BeanSerializer<com.isuwang.dapeng.json.demo.domain.XZHelperItem>{
        
      @Override
      public com.isuwang.dapeng.json.demo.domain.XZHelperItem read(TProtocol iprot) throws TException{

      com.isuwang.dapeng.json.demo.domain.XZHelperItem bean = new com.isuwang.dapeng.json.demo.domain.XZHelperItem();
      com.isuwang.org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();

      while(true){
        schemeField = iprot.readFieldBegin();
        if(schemeField.type == com.isuwang.org.apache.thrift.protocol.TType.STOP){ break;}

        switch(schemeField.id){
          
              case 1:
              if(schemeField.type == com.isuwang.org.apache.thrift.protocol.TType.STRING){
              String elem0 = iprot.readString();
       bean.setTitle(elem0);
            }else{
              com.isuwang.org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
              break;
            
              case 2:
              if(schemeField.type == com.isuwang.org.apache.thrift.protocol.TType.STRING){
              String elem0 = iprot.readString();
       bean.setDesc(Optional.of(elem0));
            }else{
              com.isuwang.org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
              break;
            
              case 3:
              if(schemeField.type == com.isuwang.org.apache.thrift.protocol.TType.STRING){
              String elem0 = iprot.readString();
       bean.setImageUrl(Optional.of(elem0));
            }else{
              com.isuwang.org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
              break;
            
              case 4:
              if(schemeField.type == com.isuwang.org.apache.thrift.protocol.TType.STRING){
              String elem0 = iprot.readString();
       bean.setDestUrl(Optional.of(elem0));
            }else{
              com.isuwang.org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
              break;
            
          
            default:
            com.isuwang.org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      validate(bean);
      return bean;
    }
    
      @Override
      public void write(com.isuwang.dapeng.json.demo.domain.XZHelperItem bean, TProtocol oprot) throws TException{

      validate(bean);
      oprot.writeStructBegin(new com.isuwang.org.apache.thrift.protocol.TStruct("XZHelperItem"));

      
            oprot.writeFieldBegin(new com.isuwang.org.apache.thrift.protocol.TField("title", com.isuwang.org.apache.thrift.protocol.TType.STRING, (short) 1));
            String elem0 = bean.getTitle();
            oprot.writeString(elem0);
            
            oprot.writeFieldEnd();
          if(bean.getDesc().isPresent()){
              oprot.writeFieldBegin(new com.isuwang.org.apache.thrift.protocol.TField("desc", com.isuwang.org.apache.thrift.protocol.TType.STRING, (short) 2));
              String elem1 = bean.getDesc().get();
              oprot.writeString(elem1);
              
            }
            if(bean.getImageUrl().isPresent()){
              oprot.writeFieldBegin(new com.isuwang.org.apache.thrift.protocol.TField("imageUrl", com.isuwang.org.apache.thrift.protocol.TType.STRING, (short) 3));
              String elem2 = bean.getImageUrl().get();
              oprot.writeString(elem2);
              
            }
            if(bean.getDestUrl().isPresent()){
              oprot.writeFieldBegin(new com.isuwang.org.apache.thrift.protocol.TField("destUrl", com.isuwang.org.apache.thrift.protocol.TType.STRING, (short) 4));
              String elem3 = bean.getDestUrl().get();
              oprot.writeString(elem3);
              
            }
            
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }
    
      public void validate(com.isuwang.dapeng.json.demo.domain.XZHelperItem bean) throws TException{
      
              if(bean.getTitle() == null)
              throw new SoaException(SoaBaseCode.NotNull, "title字段不允许为空");
            
    }
    
        @Override
        public String toString(com.isuwang.dapeng.json.demo.domain.XZHelperItem bean)
        {return bean == null ? "null" : bean.toString();}
      }
      

      