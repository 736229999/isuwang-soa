 package com.isuwang.dapeng.json.demo.domain.serializer;
        import com.isuwang.dapeng.json.demo.domain.serializer.*;

        import com.isuwang.dapeng.core.*;
        import com.isuwang.org.apache.thrift.*;
        import com.isuwang.org.apache.thrift.protocol.*;

        import java.util.Optional;
        import java.util.concurrent.CompletableFuture;
        import java.util.concurrent.Future;

        /**
        * Autogenerated by Dapeng-Code-Generator (1.2.2)
        *
        * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
        *  @generated
        **/
        public class OrderForWxResponseSerializer implements BeanSerializer<com.isuwang.dapeng.json.demo.domain.OrderForWxResponse>{
        
      @Override
      public com.isuwang.dapeng.json.demo.domain.OrderForWxResponse read(TProtocol iprot) throws TException{

      com.isuwang.dapeng.json.demo.domain.OrderForWxResponse bean = new com.isuwang.dapeng.json.demo.domain.OrderForWxResponse();
      com.isuwang.org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();

      while(true){
        schemeField = iprot.readFieldBegin();
        if(schemeField.type == com.isuwang.org.apache.thrift.protocol.TType.STOP){ break;}

        switch(schemeField.id){
          
              case 1:
              if(schemeField.type == com.isuwang.org.apache.thrift.protocol.TType.STRING){
              String elem0 = iprot.readString();
       bean.setAppid(elem0);
            }else{
              com.isuwang.org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
              break;
            
              case 2:
              if(schemeField.type == com.isuwang.org.apache.thrift.protocol.TType.STRING){
              String elem0 = iprot.readString();
       bean.setPartnerid(elem0);
            }else{
              com.isuwang.org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
              break;
            
              case 3:
              if(schemeField.type == com.isuwang.org.apache.thrift.protocol.TType.STRING){
              String elem0 = iprot.readString();
       bean.setPrepayid(elem0);
            }else{
              com.isuwang.org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
              break;
            
              case 4:
              if(schemeField.type == com.isuwang.org.apache.thrift.protocol.TType.STRING){
              String elem0 = iprot.readString();
       bean.set_package(elem0);
            }else{
              com.isuwang.org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
              break;
            
              case 5:
              if(schemeField.type == com.isuwang.org.apache.thrift.protocol.TType.STRING){
              String elem0 = iprot.readString();
       bean.setNoncestr(elem0);
            }else{
              com.isuwang.org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
              break;
            
              case 6:
              if(schemeField.type == com.isuwang.org.apache.thrift.protocol.TType.STRING){
              String elem0 = iprot.readString();
       bean.setTimestamp(elem0);
            }else{
              com.isuwang.org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
              break;
            
              case 7:
              if(schemeField.type == com.isuwang.org.apache.thrift.protocol.TType.STRING){
              String elem0 = iprot.readString();
       bean.setSign(elem0);
            }else{
              com.isuwang.org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
              break;
            
              case 8:
              if(schemeField.type == com.isuwang.org.apache.thrift.protocol.TType.BOOL){
              boolean elem0 = iprot.readBool();
       bean.setReturnCode(elem0);
            }else{
              com.isuwang.org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
              break;
            
          
            default:
            com.isuwang.org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      validate(bean);
      return bean;
    }
    
      @Override
      public void write(com.isuwang.dapeng.json.demo.domain.OrderForWxResponse bean, TProtocol oprot) throws TException{

      validate(bean);
      oprot.writeStructBegin(new com.isuwang.org.apache.thrift.protocol.TStruct("OrderForWxResponse"));

      
            oprot.writeFieldBegin(new com.isuwang.org.apache.thrift.protocol.TField("appid", com.isuwang.org.apache.thrift.protocol.TType.STRING, (short) 1));
            String elem0 = bean.getAppid();
            oprot.writeString(elem0);
            
            oprot.writeFieldEnd();
          
            oprot.writeFieldBegin(new com.isuwang.org.apache.thrift.protocol.TField("partnerid", com.isuwang.org.apache.thrift.protocol.TType.STRING, (short) 2));
            String elem1 = bean.getPartnerid();
            oprot.writeString(elem1);
            
            oprot.writeFieldEnd();
          
            oprot.writeFieldBegin(new com.isuwang.org.apache.thrift.protocol.TField("prepayid", com.isuwang.org.apache.thrift.protocol.TType.STRING, (short) 3));
            String elem2 = bean.getPrepayid();
            oprot.writeString(elem2);
            
            oprot.writeFieldEnd();
          
            oprot.writeFieldBegin(new com.isuwang.org.apache.thrift.protocol.TField("_package", com.isuwang.org.apache.thrift.protocol.TType.STRING, (short) 4));
            String elem3 = bean.get_package();
            oprot.writeString(elem3);
            
            oprot.writeFieldEnd();
          
            oprot.writeFieldBegin(new com.isuwang.org.apache.thrift.protocol.TField("noncestr", com.isuwang.org.apache.thrift.protocol.TType.STRING, (short) 5));
            String elem4 = bean.getNoncestr();
            oprot.writeString(elem4);
            
            oprot.writeFieldEnd();
          
            oprot.writeFieldBegin(new com.isuwang.org.apache.thrift.protocol.TField("timestamp", com.isuwang.org.apache.thrift.protocol.TType.STRING, (short) 6));
            String elem5 = bean.getTimestamp();
            oprot.writeString(elem5);
            
            oprot.writeFieldEnd();
          
            oprot.writeFieldBegin(new com.isuwang.org.apache.thrift.protocol.TField("sign", com.isuwang.org.apache.thrift.protocol.TType.STRING, (short) 7));
            String elem6 = bean.getSign();
            oprot.writeString(elem6);
            
            oprot.writeFieldEnd();
          
            oprot.writeFieldBegin(new com.isuwang.org.apache.thrift.protocol.TField("returnCode", com.isuwang.org.apache.thrift.protocol.TType.BOOL, (short) 8));
            Boolean elem7 = bean.getReturnCode();
            oprot.writeBool(elem7);
            
            oprot.writeFieldEnd();
          
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }
    
      public void validate(com.isuwang.dapeng.json.demo.domain.OrderForWxResponse bean) throws TException{
      
              if(bean.getAppid() == null)
              throw new SoaException(SoaBaseCode.NotNull, "appid字段不允许为空");
            
              if(bean.getPartnerid() == null)
              throw new SoaException(SoaBaseCode.NotNull, "partnerid字段不允许为空");
            
              if(bean.getPrepayid() == null)
              throw new SoaException(SoaBaseCode.NotNull, "prepayid字段不允许为空");
            
              if(bean.get_package() == null)
              throw new SoaException(SoaBaseCode.NotNull, "_package字段不允许为空");
            
              if(bean.getNoncestr() == null)
              throw new SoaException(SoaBaseCode.NotNull, "noncestr字段不允许为空");
            
              if(bean.getTimestamp() == null)
              throw new SoaException(SoaBaseCode.NotNull, "timestamp字段不允许为空");
            
              if(bean.getSign() == null)
              throw new SoaException(SoaBaseCode.NotNull, "sign字段不允许为空");
            
    }
    
        @Override
        public String toString(com.isuwang.dapeng.json.demo.domain.OrderForWxResponse bean)
        {return bean == null ? "null" : bean.toString();}
      }
      

      