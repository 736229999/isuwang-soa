 package com.isuwang.dapeng.json.demo.domain.serializer;
        import com.isuwang.dapeng.json.demo.domain.serializer.*;

        import com.isuwang.dapeng.core.*;
        import com.isuwang.org.apache.thrift.*;
        import com.isuwang.org.apache.thrift.protocol.*;

        import java.util.Optional;
        import java.util.concurrent.CompletableFuture;
        import java.util.concurrent.Future;

        /**
        * Autogenerated by Dapeng-Code-Generator (1.2.2)
        *
        * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
        *  @generated
        **/
        public class ModifyOrderForOfflineRequestSerializer implements BeanSerializer<com.isuwang.dapeng.json.demo.domain.ModifyOrderForOfflineRequest>{
        
      @Override
      public com.isuwang.dapeng.json.demo.domain.ModifyOrderForOfflineRequest read(TProtocol iprot) throws TException{

      com.isuwang.dapeng.json.demo.domain.ModifyOrderForOfflineRequest bean = new com.isuwang.dapeng.json.demo.domain.ModifyOrderForOfflineRequest();
      com.isuwang.org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();

      while(true){
        schemeField = iprot.readFieldBegin();
        if(schemeField.type == com.isuwang.org.apache.thrift.protocol.TType.STOP){ break;}

        switch(schemeField.id){
          
              case 1:
              if(schemeField.type == com.isuwang.org.apache.thrift.protocol.TType.I32){
               int elem0 = iprot.readI32();
       bean.setOrderId(elem0);
            }else{
              com.isuwang.org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
              break;
            
              case 2:
              if(schemeField.type == com.isuwang.org.apache.thrift.protocol.TType.STRING){
              String elem0 = iprot.readString();
       bean.setOfflinePatientName(elem0);
            }else{
              com.isuwang.org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
              break;
            
              case 3:
              if(schemeField.type == com.isuwang.org.apache.thrift.protocol.TType.I32){
              com.isuwang.dapeng.json.demo.enums.Gender elem0 = com.isuwang.dapeng.json.demo.enums.Gender.findByValue(iprot.readI32());
       bean.setOfflinePatientGender(elem0);
            }else{
              com.isuwang.org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
              break;
            
              case 4:
              if(schemeField.type == com.isuwang.org.apache.thrift.protocol.TType.I32){
               int elem0 = iprot.readI32();
       bean.setOfflinePatientAge(elem0);
            }else{
              com.isuwang.org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
              break;
            
              case 5:
              if(schemeField.type == com.isuwang.org.apache.thrift.protocol.TType.STRING){
              String elem0 = iprot.readString();
       bean.setPatientInformationContent(elem0);
            }else{
              com.isuwang.org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
              break;
            
              case 6:
              if(schemeField.type == com.isuwang.org.apache.thrift.protocol.TType.STRING){
              String elem0 = iprot.readString();
       bean.setRemark(Optional.of(elem0));
            }else{
              com.isuwang.org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
              break;
            
              case 7:
              if(schemeField.type == com.isuwang.org.apache.thrift.protocol.TType.I32){
              com.isuwang.dapeng.json.demo.enums.TOrderTherapyMode elem0 = com.isuwang.dapeng.json.demo.enums.TOrderTherapyMode.findByValue(iprot.readI32());
       bean.setTherapyMode(elem0);
            }else{
              com.isuwang.org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
              break;
            
              case 8:
              if(schemeField.type == com.isuwang.org.apache.thrift.protocol.TType.BOOL){
              boolean elem0 = iprot.readBool();
       bean.setFirstTherapy(elem0);
            }else{
              com.isuwang.org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
              break;
            
          
            default:
            com.isuwang.org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      validate(bean);
      return bean;
    }
    
      @Override
      public void write(com.isuwang.dapeng.json.demo.domain.ModifyOrderForOfflineRequest bean, TProtocol oprot) throws TException{

      validate(bean);
      oprot.writeStructBegin(new com.isuwang.org.apache.thrift.protocol.TStruct("ModifyOrderForOfflineRequest"));

      
            oprot.writeFieldBegin(new com.isuwang.org.apache.thrift.protocol.TField("orderId", com.isuwang.org.apache.thrift.protocol.TType.I32, (short) 1));
            Integer elem0 = bean.getOrderId();
            oprot.writeI32(elem0);
            
            oprot.writeFieldEnd();
          
            oprot.writeFieldBegin(new com.isuwang.org.apache.thrift.protocol.TField("offlinePatientName", com.isuwang.org.apache.thrift.protocol.TType.STRING, (short) 2));
            String elem1 = bean.getOfflinePatientName();
            oprot.writeString(elem1);
            
            oprot.writeFieldEnd();
          
            oprot.writeFieldBegin(new com.isuwang.org.apache.thrift.protocol.TField("offlinePatientGender", com.isuwang.org.apache.thrift.protocol.TType.I32, (short) 3));
            com.isuwang.dapeng.json.demo.enums.Gender elem2 = bean.getOfflinePatientGender();
            oprot.writeI32(elem2.getValue());
            
            oprot.writeFieldEnd();
          
            oprot.writeFieldBegin(new com.isuwang.org.apache.thrift.protocol.TField("offlinePatientAge", com.isuwang.org.apache.thrift.protocol.TType.I32, (short) 4));
            Integer elem3 = bean.getOfflinePatientAge();
            oprot.writeI32(elem3);
            
            oprot.writeFieldEnd();
          
            oprot.writeFieldBegin(new com.isuwang.org.apache.thrift.protocol.TField("patientInformationContent", com.isuwang.org.apache.thrift.protocol.TType.STRING, (short) 5));
            String elem4 = bean.getPatientInformationContent();
            oprot.writeString(elem4);
            
            oprot.writeFieldEnd();
          if(bean.getRemark().isPresent()){
              oprot.writeFieldBegin(new com.isuwang.org.apache.thrift.protocol.TField("remark", com.isuwang.org.apache.thrift.protocol.TType.STRING, (short) 6));
              String elem5 = bean.getRemark().get();
              oprot.writeString(elem5);
              
            }
            
            oprot.writeFieldBegin(new com.isuwang.org.apache.thrift.protocol.TField("therapyMode", com.isuwang.org.apache.thrift.protocol.TType.I32, (short) 7));
            com.isuwang.dapeng.json.demo.enums.TOrderTherapyMode elem6 = bean.getTherapyMode();
            oprot.writeI32(elem6.getValue());
            
            oprot.writeFieldEnd();
          
            oprot.writeFieldBegin(new com.isuwang.org.apache.thrift.protocol.TField("firstTherapy", com.isuwang.org.apache.thrift.protocol.TType.BOOL, (short) 8));
            Boolean elem7 = bean.getFirstTherapy();
            oprot.writeBool(elem7);
            
            oprot.writeFieldEnd();
          
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }
    
      public void validate(com.isuwang.dapeng.json.demo.domain.ModifyOrderForOfflineRequest bean) throws TException{
      
              if(bean.getOfflinePatientName() == null)
              throw new SoaException(SoaBaseCode.NotNull, "offlinePatientName字段不允许为空");
            
              if(bean.getOfflinePatientGender() == null)
              throw new SoaException(SoaBaseCode.NotNull, "offlinePatientGender字段不允许为空");
            
              if(bean.getPatientInformationContent() == null)
              throw new SoaException(SoaBaseCode.NotNull, "patientInformationContent字段不允许为空");
            
              if(bean.getTherapyMode() == null)
              throw new SoaException(SoaBaseCode.NotNull, "therapyMode字段不允许为空");
            
    }
    
        @Override
        public String toString(com.isuwang.dapeng.json.demo.domain.ModifyOrderForOfflineRequest bean)
        {return bean == null ? "null" : bean.toString();}
      }
      

      