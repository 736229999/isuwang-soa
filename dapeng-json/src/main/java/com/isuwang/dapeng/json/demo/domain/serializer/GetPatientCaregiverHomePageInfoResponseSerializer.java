 package com.isuwang.dapeng.json.demo.domain.serializer;
        import com.isuwang.dapeng.json.demo.domain.serializer.*;

        import com.isuwang.dapeng.core.*;
        import com.isuwang.org.apache.thrift.*;
        import com.isuwang.org.apache.thrift.protocol.*;

        import java.util.Optional;
        import java.util.concurrent.CompletableFuture;
        import java.util.concurrent.Future;

        /**
        * Autogenerated by Dapeng-Code-Generator (1.2.2)
        *
        * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
        *  @generated
        **/
        public class GetPatientCaregiverHomePageInfoResponseSerializer implements BeanSerializer<com.isuwang.dapeng.json.demo.domain.GetPatientCaregiverHomePageInfoResponse>{
        
      @Override
      public com.isuwang.dapeng.json.demo.domain.GetPatientCaregiverHomePageInfoResponse read(TProtocol iprot) throws TException{

      com.isuwang.dapeng.json.demo.domain.GetPatientCaregiverHomePageInfoResponse bean = new com.isuwang.dapeng.json.demo.domain.GetPatientCaregiverHomePageInfoResponse();
      com.isuwang.org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();

      while(true){
        schemeField = iprot.readFieldBegin();
        if(schemeField.type == com.isuwang.org.apache.thrift.protocol.TType.STOP){ break;}

        switch(schemeField.id){
          
              case 1:
              if(schemeField.type == com.isuwang.org.apache.thrift.protocol.TType.STRUCT){
              com.isuwang.dapeng.json.demo.domain.DoctorInfo elem0 = new com.isuwang.dapeng.json.demo.domain.DoctorInfo();
        elem0=new com.isuwang.dapeng.json.demo.domain.serializer.DoctorInfoSerializer().read(iprot);
       bean.setDoctorInf(Optional.of(elem0));
            }else{
              com.isuwang.org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
              break;
            
              case 2:
              if(schemeField.type == com.isuwang.org.apache.thrift.protocol.TType.I32){
               int elem0 = iprot.readI32();
       bean.setDayNum(elem0);
            }else{
              com.isuwang.org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
              break;
            
              case 3:
              if(schemeField.type == com.isuwang.org.apache.thrift.protocol.TType.I32){
               int elem0 = iprot.readI32();
       bean.setMsgNum(elem0);
            }else{
              com.isuwang.org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
              break;
            
              case 4:
              if(schemeField.type == com.isuwang.org.apache.thrift.protocol.TType.I32){
               int elem0 = iprot.readI32();
       bean.setAppointmentNum(elem0);
            }else{
              com.isuwang.org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
              break;
            
              case 5:
              if(schemeField.type == com.isuwang.org.apache.thrift.protocol.TType.BOOL){
              boolean elem0 = iprot.readBool();
       bean.setAccompanyPackFlag(elem0);
            }else{
              com.isuwang.org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
              break;
            
              case 6:
              if(schemeField.type == com.isuwang.org.apache.thrift.protocol.TType.STRING){
              String elem0 = iprot.readString();
       bean.setReplyCount(Optional.of(elem0));
            }else{
              com.isuwang.org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
              break;
            
              case 7:
              if(schemeField.type == com.isuwang.org.apache.thrift.protocol.TType.STRING){
              String elem0 = iprot.readString();
       bean.setReplyUrltext(Optional.of(elem0));
            }else{
              com.isuwang.org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
              break;
            
              case 8:
              if(schemeField.type == com.isuwang.org.apache.thrift.protocol.TType.STRING){
              String elem0 = iprot.readString();
       bean.setReplyUrl(Optional.of(elem0));
            }else{
              com.isuwang.org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
              break;
            
          
            default:
            com.isuwang.org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      validate(bean);
      return bean;
    }
    
      @Override
      public void write(com.isuwang.dapeng.json.demo.domain.GetPatientCaregiverHomePageInfoResponse bean, TProtocol oprot) throws TException{

      validate(bean);
      oprot.writeStructBegin(new com.isuwang.org.apache.thrift.protocol.TStruct("GetPatientCaregiverHomePageInfoResponse"));

      if(bean.getDoctorInf().isPresent()){
              oprot.writeFieldBegin(new com.isuwang.org.apache.thrift.protocol.TField("doctorInf", com.isuwang.org.apache.thrift.protocol.TType.STRUCT, (short) 1));
              com.isuwang.dapeng.json.demo.domain.DoctorInfo elem0 = bean.getDoctorInf().get();
               new com.isuwang.dapeng.json.demo.domain.serializer.DoctorInfoSerializer().write(elem0, oprot);
              
            }
            
            oprot.writeFieldBegin(new com.isuwang.org.apache.thrift.protocol.TField("dayNum", com.isuwang.org.apache.thrift.protocol.TType.I32, (short) 2));
            Integer elem1 = bean.getDayNum();
            oprot.writeI32(elem1);
            
            oprot.writeFieldEnd();
          
            oprot.writeFieldBegin(new com.isuwang.org.apache.thrift.protocol.TField("msgNum", com.isuwang.org.apache.thrift.protocol.TType.I32, (short) 3));
            Integer elem2 = bean.getMsgNum();
            oprot.writeI32(elem2);
            
            oprot.writeFieldEnd();
          
            oprot.writeFieldBegin(new com.isuwang.org.apache.thrift.protocol.TField("appointmentNum", com.isuwang.org.apache.thrift.protocol.TType.I32, (short) 4));
            Integer elem3 = bean.getAppointmentNum();
            oprot.writeI32(elem3);
            
            oprot.writeFieldEnd();
          
            oprot.writeFieldBegin(new com.isuwang.org.apache.thrift.protocol.TField("accompanyPackFlag", com.isuwang.org.apache.thrift.protocol.TType.BOOL, (short) 5));
            Boolean elem4 = bean.getAccompanyPackFlag();
            oprot.writeBool(elem4);
            
            oprot.writeFieldEnd();
          if(bean.getReplyCount().isPresent()){
              oprot.writeFieldBegin(new com.isuwang.org.apache.thrift.protocol.TField("replyCount", com.isuwang.org.apache.thrift.protocol.TType.STRING, (short) 6));
              String elem5 = bean.getReplyCount().get();
              oprot.writeString(elem5);
              
            }
            if(bean.getReplyUrltext().isPresent()){
              oprot.writeFieldBegin(new com.isuwang.org.apache.thrift.protocol.TField("replyUrltext", com.isuwang.org.apache.thrift.protocol.TType.STRING, (short) 7));
              String elem6 = bean.getReplyUrltext().get();
              oprot.writeString(elem6);
              
            }
            if(bean.getReplyUrl().isPresent()){
              oprot.writeFieldBegin(new com.isuwang.org.apache.thrift.protocol.TField("replyUrl", com.isuwang.org.apache.thrift.protocol.TType.STRING, (short) 8));
              String elem7 = bean.getReplyUrl().get();
              oprot.writeString(elem7);
              
            }
            
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }
    
      public void validate(com.isuwang.dapeng.json.demo.domain.GetPatientCaregiverHomePageInfoResponse bean) throws TException{
      
                if(bean.getDoctorInf().isPresent())
                new com.isuwang.dapeng.json.demo.domain.serializer.DoctorInfoSerializer().validate(bean.getDoctorInf().get());
              
    }
    
        @Override
        public String toString(com.isuwang.dapeng.json.demo.domain.GetPatientCaregiverHomePageInfoResponse bean)
        {return bean == null ? "null" : bean.toString();}
      }
      

      