 package com.isuwang.dapeng.json.demo.domain.serializer;
        import com.isuwang.dapeng.json.demo.domain.serializer.*;

        import com.isuwang.dapeng.core.*;
        import com.isuwang.org.apache.thrift.*;
        import com.isuwang.org.apache.thrift.protocol.*;

        import java.util.Optional;
        import java.util.concurrent.CompletableFuture;
        import java.util.concurrent.Future;

        /**
        * Autogenerated by Dapeng-Code-Generator (1.2.2)
        *
        * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
        *  @generated
        **/
        public class GetLastTreatDoctorResponseSerializer implements BeanSerializer<com.isuwang.dapeng.json.demo.domain.GetLastTreatDoctorResponse>{
        
      @Override
      public com.isuwang.dapeng.json.demo.domain.GetLastTreatDoctorResponse read(TProtocol iprot) throws TException{

      com.isuwang.dapeng.json.demo.domain.GetLastTreatDoctorResponse bean = new com.isuwang.dapeng.json.demo.domain.GetLastTreatDoctorResponse();
      com.isuwang.org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();

      while(true){
        schemeField = iprot.readFieldBegin();
        if(schemeField.type == com.isuwang.org.apache.thrift.protocol.TType.STOP){ break;}

        switch(schemeField.id){
          
              case 1:
              if(schemeField.type == com.isuwang.org.apache.thrift.protocol.TType.STRUCT){
              com.isuwang.dapeng.json.demo.domain.LastTreatDoctorInfo elem0 = new com.isuwang.dapeng.json.demo.domain.LastTreatDoctorInfo();
        elem0=new com.isuwang.dapeng.json.demo.domain.serializer.LastTreatDoctorInfoSerializer().read(iprot);
       bean.setDoctorInfo(Optional.of(elem0));
            }else{
              com.isuwang.org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
              break;
            
          
            default:
            com.isuwang.org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      validate(bean);
      return bean;
    }
    
      @Override
      public void write(com.isuwang.dapeng.json.demo.domain.GetLastTreatDoctorResponse bean, TProtocol oprot) throws TException{

      validate(bean);
      oprot.writeStructBegin(new com.isuwang.org.apache.thrift.protocol.TStruct("GetLastTreatDoctorResponse"));

      if(bean.getDoctorInfo().isPresent()){
              oprot.writeFieldBegin(new com.isuwang.org.apache.thrift.protocol.TField("doctorInfo", com.isuwang.org.apache.thrift.protocol.TType.STRUCT, (short) 1));
              com.isuwang.dapeng.json.demo.domain.LastTreatDoctorInfo elem0 = bean.getDoctorInfo().get();
               new com.isuwang.dapeng.json.demo.domain.serializer.LastTreatDoctorInfoSerializer().write(elem0, oprot);
              
            }
            
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }
    
      public void validate(com.isuwang.dapeng.json.demo.domain.GetLastTreatDoctorResponse bean) throws TException{
      
                if(bean.getDoctorInfo().isPresent())
                new com.isuwang.dapeng.json.demo.domain.serializer.LastTreatDoctorInfoSerializer().validate(bean.getDoctorInfo().get());
              
    }
    
        @Override
        public String toString(com.isuwang.dapeng.json.demo.domain.GetLastTreatDoctorResponse bean)
        {return bean == null ? "null" : bean.toString();}
      }
      

      