package com.isuwang.dapeng.json.demo.enums;

        /**
         * Autogenerated by Dapeng-Code-Generator (1.2.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated

        * 

订单状态

        **/
        public enum TOrderStatus implements com.isuwang.org.apache.thrift.TEnum{
        
            /**
            *

新建[已挂号但未缴纳诊费]

            **/
            INIT(1),
          
            /**
            *

待诊断[已缴纳就诊费用]

            **/
            WAITING_DIAGNOSIS(2),
          
            /**
            *

已过期[挂号后没在设定时间缴纳就诊费用]

            **/
            EXPIRED(3),
          
            /**
            *

已诊断[正常诊断完毕]

            **/
            CONFIRMED_DIAGNOSIS(4),
          
            /**
            *

已退款[异常情况导致退诊断费用]

            **/
            REFUND(5),
          
            /**
            *

已取消[取消订单]

            **/
            CANCEL(6),
          
            /**
            *

已发起通话[患者未接通]

            **/
            LAUNCHED(7),
          
            /**
            *

诊断中

            **/
            DIAGNOSING(8),
          
            /**
            *

已过期未就诊[医生发起过通话但未接通]

            **/
            PATIENT_EXPIRED(9),
          
            /**
            *

已过期未诊断[医生没有发起会话]

            **/
            DOCTOR_EXPIRED(10),
          
            /**
            *

 超时付款成功[待退款]

            **/
            EXPIRED_PAID(11),
          
            /**
            *

 异常取消

            **/
            EXCEPTION_CANCEL(12);
          

        private final int value;

        private TOrderStatus(int value){
            this.value = value;
        }

        public int getValue(){
            return this.value;
        }

        public static TOrderStatus findByValue(int value){
            switch(value){
            
                 case 1:
                    return INIT;
               
                 case 2:
                    return WAITING_DIAGNOSIS;
               
                 case 3:
                    return EXPIRED;
               
                 case 4:
                    return CONFIRMED_DIAGNOSIS;
               
                 case 5:
                    return REFUND;
               
                 case 6:
                    return CANCEL;
               
                 case 7:
                    return LAUNCHED;
               
                 case 8:
                    return DIAGNOSING;
               
                 case 9:
                    return PATIENT_EXPIRED;
               
                 case 10:
                    return DOCTOR_EXPIRED;
               
                 case 11:
                    return EXPIRED_PAID;
               
                 case 12:
                    return EXCEPTION_CANCEL;
               
               default:
                   return null;
            }
        }
        }
      