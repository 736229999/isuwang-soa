 package com.isuwang.dapeng.json.demo.domain.serializer;
        import com.isuwang.dapeng.json.demo.domain.serializer.*;

        import com.isuwang.dapeng.core.*;
        import com.isuwang.org.apache.thrift.*;
        import com.isuwang.org.apache.thrift.protocol.*;

        import java.util.Optional;
        import java.util.concurrent.CompletableFuture;
        import java.util.concurrent.Future;

        /**
        * Autogenerated by Dapeng-Code-Generator (1.2.2)
        *
        * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
        *  @generated
        **/
        public class RecommendItemSerializer implements BeanSerializer<com.isuwang.dapeng.json.demo.domain.RecommendItem>{
        
      @Override
      public com.isuwang.dapeng.json.demo.domain.RecommendItem read(TProtocol iprot) throws TException{

      com.isuwang.dapeng.json.demo.domain.RecommendItem bean = new com.isuwang.dapeng.json.demo.domain.RecommendItem();
      com.isuwang.org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();

      while(true){
        schemeField = iprot.readFieldBegin();
        if(schemeField.type == com.isuwang.org.apache.thrift.protocol.TType.STOP){ break;}

        switch(schemeField.id){
          
              case 1:
              if(schemeField.type == com.isuwang.org.apache.thrift.protocol.TType.I32){
               int elem0 = iprot.readI32();
       bean.setId(elem0);
            }else{
              com.isuwang.org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
              break;
            
              case 2:
              if(schemeField.type == com.isuwang.org.apache.thrift.protocol.TType.I32){
               int elem0 = iprot.readI32();
       bean.setPatientId(elem0);
            }else{
              com.isuwang.org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
              break;
            
              case 3:
              if(schemeField.type == com.isuwang.org.apache.thrift.protocol.TType.I32){
               int elem0 = iprot.readI32();
       bean.setOrderId(elem0);
            }else{
              com.isuwang.org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
              break;
            
              case 4:
              if(schemeField.type == com.isuwang.org.apache.thrift.protocol.TType.I32){
              com.isuwang.dapeng.json.demo.enums.RecommendTypeEnum elem0 = com.isuwang.dapeng.json.demo.enums.RecommendTypeEnum.findByValue(iprot.readI32());
       bean.setRecommendType(elem0);
            }else{
              com.isuwang.org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
              break;
            
              case 5:
              if(schemeField.type == com.isuwang.org.apache.thrift.protocol.TType.I32){
               int elem0 = iprot.readI32();
       bean.setRecDoctorId(Optional.of(elem0));
            }else{
              com.isuwang.org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
              break;
            
              case 6:
              if(schemeField.type == com.isuwang.org.apache.thrift.protocol.TType.STRING){
              String elem0 = iprot.readString();
       bean.setRecTitleCategory(Optional.of(elem0));
            }else{
              com.isuwang.org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
              break;
            
              case 7:
              if(schemeField.type == com.isuwang.org.apache.thrift.protocol.TType.I32){
               int elem0 = iprot.readI32();
       bean.setRecommendBy(elem0);
            }else{
              com.isuwang.org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
              break;
            
              case 8:
              if(schemeField.type == com.isuwang.org.apache.thrift.protocol.TType.STRUCT){
              com.isuwang.dapeng.json.demo.domain.DoctorInfo elem0 = new com.isuwang.dapeng.json.demo.domain.DoctorInfo();
        elem0=new com.isuwang.dapeng.json.demo.domain.serializer.DoctorInfoSerializer().read(iprot);
       bean.setRecDoctorInfo(Optional.of(elem0));
            }else{
              com.isuwang.org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
              break;
            
              case 9:
              if(schemeField.type == com.isuwang.org.apache.thrift.protocol.TType.DOUBLE){
               double elem0 = iprot.readDouble();
       bean.setPrice(Optional.of(elem0));
            }else{
              com.isuwang.org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
              break;
            
              case 10:
              if(schemeField.type == com.isuwang.org.apache.thrift.protocol.TType.DOUBLE){
               double elem0 = iprot.readDouble();
       bean.setDiscountPrice(Optional.of(elem0));
            }else{
              com.isuwang.org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
              break;
            
              case 11:
              if(schemeField.type == com.isuwang.org.apache.thrift.protocol.TType.I32){
               int elem0 = iprot.readI32();
       bean.setUnitTime(Optional.of(elem0));
            }else{
              com.isuwang.org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
              break;
            
              case 12:
              if(schemeField.type == com.isuwang.org.apache.thrift.protocol.TType.BOOL){
              boolean elem0 = iprot.readBool();
       bean.setIsWorkable(Optional.of(elem0));
            }else{
              com.isuwang.org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
              break;
            
              case 13:
              if(schemeField.type == com.isuwang.org.apache.thrift.protocol.TType.STRUCT){
              com.isuwang.dapeng.json.demo.domain.TitleCategoryInfo elem0 = new com.isuwang.dapeng.json.demo.domain.TitleCategoryInfo();
        elem0=new com.isuwang.dapeng.json.demo.domain.serializer.TitleCategoryInfoSerializer().read(iprot);
       bean.setTitleCategoryInfo(Optional.of(elem0));
            }else{
              com.isuwang.org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
              break;
            
          
            default:
            com.isuwang.org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      validate(bean);
      return bean;
    }
    
      @Override
      public void write(com.isuwang.dapeng.json.demo.domain.RecommendItem bean, TProtocol oprot) throws TException{

      validate(bean);
      oprot.writeStructBegin(new com.isuwang.org.apache.thrift.protocol.TStruct("RecommendItem"));

      
            oprot.writeFieldBegin(new com.isuwang.org.apache.thrift.protocol.TField("id", com.isuwang.org.apache.thrift.protocol.TType.I32, (short) 1));
            Integer elem0 = bean.getId();
            oprot.writeI32(elem0);
            
            oprot.writeFieldEnd();
          
            oprot.writeFieldBegin(new com.isuwang.org.apache.thrift.protocol.TField("patientId", com.isuwang.org.apache.thrift.protocol.TType.I32, (short) 2));
            Integer elem1 = bean.getPatientId();
            oprot.writeI32(elem1);
            
            oprot.writeFieldEnd();
          
            oprot.writeFieldBegin(new com.isuwang.org.apache.thrift.protocol.TField("orderId", com.isuwang.org.apache.thrift.protocol.TType.I32, (short) 3));
            Integer elem2 = bean.getOrderId();
            oprot.writeI32(elem2);
            
            oprot.writeFieldEnd();
          
            oprot.writeFieldBegin(new com.isuwang.org.apache.thrift.protocol.TField("recommendType", com.isuwang.org.apache.thrift.protocol.TType.I32, (short) 4));
            com.isuwang.dapeng.json.demo.enums.RecommendTypeEnum elem3 = bean.getRecommendType();
            oprot.writeI32(elem3.getValue());
            
            oprot.writeFieldEnd();
          if(bean.getRecDoctorId().isPresent()){
              oprot.writeFieldBegin(new com.isuwang.org.apache.thrift.protocol.TField("recDoctorId", com.isuwang.org.apache.thrift.protocol.TType.I32, (short) 5));
              Integer elem4 = bean.getRecDoctorId().get();
              oprot.writeI32(elem4);
              
            }
            if(bean.getRecTitleCategory().isPresent()){
              oprot.writeFieldBegin(new com.isuwang.org.apache.thrift.protocol.TField("recTitleCategory", com.isuwang.org.apache.thrift.protocol.TType.STRING, (short) 6));
              String elem5 = bean.getRecTitleCategory().get();
              oprot.writeString(elem5);
              
            }
            
            oprot.writeFieldBegin(new com.isuwang.org.apache.thrift.protocol.TField("recommendBy", com.isuwang.org.apache.thrift.protocol.TType.I32, (short) 7));
            Integer elem6 = bean.getRecommendBy();
            oprot.writeI32(elem6);
            
            oprot.writeFieldEnd();
          if(bean.getRecDoctorInfo().isPresent()){
              oprot.writeFieldBegin(new com.isuwang.org.apache.thrift.protocol.TField("recDoctorInfo", com.isuwang.org.apache.thrift.protocol.TType.STRUCT, (short) 8));
              com.isuwang.dapeng.json.demo.domain.DoctorInfo elem7 = bean.getRecDoctorInfo().get();
               new com.isuwang.dapeng.json.demo.domain.serializer.DoctorInfoSerializer().write(elem7, oprot);
              
            }
            if(bean.getPrice().isPresent()){
              oprot.writeFieldBegin(new com.isuwang.org.apache.thrift.protocol.TField("price", com.isuwang.org.apache.thrift.protocol.TType.DOUBLE, (short) 9));
              Double elem8 = bean.getPrice().get();
              oprot.writeDouble(elem8);
              
            }
            if(bean.getDiscountPrice().isPresent()){
              oprot.writeFieldBegin(new com.isuwang.org.apache.thrift.protocol.TField("discountPrice", com.isuwang.org.apache.thrift.protocol.TType.DOUBLE, (short) 10));
              Double elem9 = bean.getDiscountPrice().get();
              oprot.writeDouble(elem9);
              
            }
            if(bean.getUnitTime().isPresent()){
              oprot.writeFieldBegin(new com.isuwang.org.apache.thrift.protocol.TField("unitTime", com.isuwang.org.apache.thrift.protocol.TType.I32, (short) 11));
              Integer elem10 = bean.getUnitTime().get();
              oprot.writeI32(elem10);
              
            }
            if(bean.getIsWorkable().isPresent()){
              oprot.writeFieldBegin(new com.isuwang.org.apache.thrift.protocol.TField("isWorkable", com.isuwang.org.apache.thrift.protocol.TType.BOOL, (short) 12));
              Boolean elem11 = bean.getIsWorkable().get();
              oprot.writeBool(elem11);
              
            }
            if(bean.getTitleCategoryInfo().isPresent()){
              oprot.writeFieldBegin(new com.isuwang.org.apache.thrift.protocol.TField("titleCategoryInfo", com.isuwang.org.apache.thrift.protocol.TType.STRUCT, (short) 13));
              com.isuwang.dapeng.json.demo.domain.TitleCategoryInfo elem12 = bean.getTitleCategoryInfo().get();
               new com.isuwang.dapeng.json.demo.domain.serializer.TitleCategoryInfoSerializer().write(elem12, oprot);
              
            }
            
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }
    
      public void validate(com.isuwang.dapeng.json.demo.domain.RecommendItem bean) throws TException{
      
              if(bean.getRecommendType() == null)
              throw new SoaException(SoaBaseCode.NotNull, "recommendType字段不允许为空");
            
                if(bean.getRecDoctorInfo().isPresent())
                new com.isuwang.dapeng.json.demo.domain.serializer.DoctorInfoSerializer().validate(bean.getRecDoctorInfo().get());
              
                if(bean.getTitleCategoryInfo().isPresent())
                new com.isuwang.dapeng.json.demo.domain.serializer.TitleCategoryInfoSerializer().validate(bean.getTitleCategoryInfo().get());
              
    }
    
        @Override
        public String toString(com.isuwang.dapeng.json.demo.domain.RecommendItem bean)
        {return bean == null ? "null" : bean.toString();}
      }
      

      