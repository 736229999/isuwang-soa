
        package com.isuwang.dapeng.json.demo.service;

        import com.isuwang.dapeng.core.Processor;
        import com.isuwang.dapeng.core.Service;
        import com.isuwang.dapeng.core.SoaGlobalTransactional;

        import java.util.concurrent.Future;

        /**
         * Autogenerated by Dapeng-Code-Generator (1.2.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated

        * 
        **/
        @Service(name="com.isuwang.dapeng.json.demo.service.OrderServiceAsync",version = "1.0.0")
        @Processor(className = "com.isuwang.dapeng.json.demo.OrderServiceAsyncCodec$Processor")
        public interface OrderServiceAsync {
        
            /**
            * 

###
#### 业务描述
   1、 批量修改单个医生一天排班情况
   2、如果以排班的时间去除勾选（弃用）则删除排班数据
   3、如果原来未排班的数据选中（认领）后则创建一天可预约(workable)记录

#### 接口依赖

#### 边界异常说明
    无

#### 输入
    1. 选中和非选中的时间段均要上传，否则未上送的时间号段不做处理

#### 前置检查


####  权限检查

####  逻辑处理


#### 数据库变更

####  事务处理

####  输出
    无

            **/
            
            
              Future<Void> batchAppointment( com.isuwang.dapeng.json.demo.domain.BatchAppointmentRequest request , long timeout) throws com.isuwang.dapeng.core.SoaException;
            
          
            /**
            * 

### 医生排班
#### 业务描述
   1、 批量修改单个医生一天排班情况
   2、如果以排班的时间去除勾选（弃用）则删除排班数据
   3、如果原来未排班的数据选中（认领）后则创建一天可预约(workable)记录

#### 接口依赖
    listAppointmentTimeForDoctor
#### 边界异常说明
    无

#### 输入
    1. 选中和非选中的时间段均要上传，否则未上送的时间号段不做处理

#### 前置检查


####  权限检查

####  逻辑处理


#### 数据库变更

####  事务处理

####  输出
    返回当天的所有排班时间段

            **/
            
            
              Future<java.util.List<com.isuwang.dapeng.json.demo.domain.AppointmentTimeItem>> batchAppointment4Doctor( com.isuwang.dapeng.json.demo.domain.BatchAppointmentRequest request , long timeout) throws com.isuwang.dapeng.core.SoaException;
            
          
            /**
            * 

### 条件查询排班列表
#### 业务描述
    添加医生排班

#### 接口依赖

#### 边界异常说明
    无

#### 输入
    1.查询条件

#### 前置检查


####  权限检查

####  逻辑处理


#### 数据库变更

####  事务处理


####  输出
    1.排班列表

            **/
            
            
              Future<com.isuwang.dapeng.json.demo.domain.ListAppointmentsResponse> listAppointments( com.isuwang.dapeng.json.demo.domain.ListAppointmentsRequest request , long timeout) throws com.isuwang.dapeng.core.SoaException;
            
          
            /**
            * 

### 批量创建【可领取】的排班信息
#### 业务描述
    添加医生排班

#### 接口依赖

#### 边界异常说明
    无

#### 输入
    1.创建条件

#### 前置检查


####  权限检查

####  逻辑处理


#### 数据库变更

####  事务处理


####  输出
   1. 无

            **/
            
            
              Future<Void> createAppointmentForAvailable( com.isuwang.dapeng.json.demo.domain.CreateAppointmentForAvailableRequest request , long timeout) throws com.isuwang.dapeng.core.SoaException;
            
          
            /**
            * 

### 最后的诊断医生
#### 业务描述
    最后的诊断医生

#### 接口依赖

#### 边界异常说明
    无

#### 输入
    1.病人id

#### 前置检查


####  权限检查

####  逻辑处理


#### 数据库变更

####  事务处理


####  输出
    1.

            **/
            
            
              Future<com.isuwang.dapeng.json.demo.domain.GetLastTreatDoctorResponse> getLastTreatDoctor( Integer patientId , long timeout) throws com.isuwang.dapeng.core.SoaException;
            
          
            /**
            * 

     ### 创建订单
     #### 业务描述
         预约锁定医生（创建【预约】订单，补充病人信息， 症状记录到订单表）

     #### 接口依赖

     #### 边界异常说明
         无

     #### 输入
         1.病人id

     #### 前置检查


     ####  权限检查

     ####  逻辑处理


     #### 数据库变更

     ####  事务处理


     ####  输出
         1. OrderItem

            **/
            
            
              Future<com.isuwang.dapeng.json.demo.domain.OrderItem> createOrder( com.isuwang.dapeng.json.demo.domain.CreateOrderRequest request , long timeout) throws com.isuwang.dapeng.core.SoaException;
            
          
            /**
            * 

   ### 查询订单列表
   #### 业务描述
       查询订单列表

   #### 接口依赖

   #### 边界异常说明
       无

   #### 输入
       1.查询条件

   #### 前置检查


   ####  权限检查

   ####  逻辑处理


   #### 数据库变更

   ####  事务处理


   ####  输出
       1.

            **/
            
            
              Future<com.isuwang.dapeng.json.demo.domain.ListOrderResponse> listOrders( com.isuwang.dapeng.json.demo.domain.ListOrderRequest request , long timeout) throws com.isuwang.dapeng.core.SoaException;
            
          
            /**
            * 

       ### 查询订单明细
       #### 业务描述
           查询订单明细

       #### 接口依赖

       #### 边界异常说明
           无

       #### 输入
           1.查询条件

       #### 前置检查


       ####  权限检查

       ####  逻辑处理


       #### 数据库变更

       ####  事务处理


       ####  输出
           1.

            **/
            
            
              Future<com.isuwang.dapeng.json.demo.domain.OrderItem> getOrder( Integer orderId , long timeout) throws com.isuwang.dapeng.core.SoaException;
            
          
            /**
            * 

       ### 修改订单状态
       #### 业务描述
           修改订单状态

       #### 接口依赖

       #### 边界异常说明
           无

       #### 输入
           1.查询条件

       #### 前置检查


       ####  权限检查

       ####  逻辑处理


       #### 数据库变更

       ####  事务处理


       ####  输出
           1.

            **/
            
            
              Future<Void> modifyOrderStatus( com.isuwang.dapeng.json.demo.domain.ModifyOrderStatusRequest request , long timeout) throws com.isuwang.dapeng.core.SoaException;
            
          
            /**
            * 

           ### 订单缴费成功的回调接口
           #### 业务描述
               订单缴费支付的回调接口

           #### 接口依赖

           #### 边界异常说明
               无

           #### 输入
               1. 订单唯一ID
               2. 支付平台的订单ID

           #### 前置检查
               1. 检查订单是否存在

           ####  权限检查

           ####  逻辑处理
               1. 更新订单状态并记录支付平台的订单ID
               2. 调用结算接口，创建结算记录

           #### 数据库变更

           ####  事务处理


           ####  输出
               1.

            **/
            
            
              Future<Boolean> payNotify( com.isuwang.dapeng.json.demo.domain.PayNotifyRequest payNotifyRequest , long timeout) throws com.isuwang.dapeng.core.SoaException;
            
          
            /**
            * 

           ### 创建诊疗报告（医生端）
           #### 业务描述
               创建诊疗报告

           #### 接口依赖
                saveRecommends
           #### 边界异常说明
               无

           #### 输入
               1. 订单ID
               2. 诊疗报告内容
               3、如果是首诊报告还有推荐医生和推荐量表
           #### 前置检查


           ####  权限检查

           ####  逻辑处理
               1. 插入数据库

           #### 数据库变更

           ####  事务处理


           ####  输出
               1. id

            **/
            
            
              Future<Integer> createDiagnose( com.isuwang.dapeng.json.demo.domain.CreateDiagnoseRequest createDiagnoseRequest , long timeout) throws com.isuwang.dapeng.core.SoaException;
            
          
            /**
            * 

       ### 诊疗报告列表
       #### 业务描述
           诊疗报告列表，支持医生和患者查自己的报告

       #### 接口依赖

       #### 边界异常说明
           无

       #### 输入


       #### 前置检查


       ####  权限检查

       ####  逻辑处理


       #### 数据库变更

       ####  事务处理


       ####  输出
           1. id

            **/
            
            
              Future<com.isuwang.dapeng.json.demo.domain.ListDiagnoseResponse> listDiagnoses( com.isuwang.dapeng.json.demo.domain.ListDiagnoseRequest listDiagnoseRequest , long timeout) throws com.isuwang.dapeng.core.SoaException;
            
          
            /**
            * 

       ### 预约就诊计划(排队就诊)
       #### 业务描述
           查询未过期的预约记录

       #### 接口依赖

       #### 边界异常说明
           无

       #### 输入


       #### 前置检查


       ####  权限检查

       ####  逻辑处理


       #### 数据库变更

       ####  事务处理


       ####  输出
           1. id

            **/
            
            
              Future<com.isuwang.dapeng.json.demo.domain.ListTreatPlansResponse> listTreatPlans(  long timeout) throws com.isuwang.dapeng.core.SoaException;
            
          
            /**
            * 

### 查询可以预约医生（按时间周期排序）
#### 业务描述
查询可以预约医生（按时间周期排序）

#### 接口依赖

#### 边界异常说明
无

#### 输入


#### 前置检查


####  权限检查

####  逻辑处理


#### 数据库变更

####  事务处理


####  输出
1. 可预约医生列表

            **/
            
            
              Future<com.isuwang.dapeng.json.demo.domain.AppointmentDoctorsResponse> listAppointmentDoctors( com.isuwang.dapeng.json.demo.domain.ListAppointmentDoctorsRequest request , long timeout) throws com.isuwang.dapeng.core.SoaException;
            
          
            /**
            * 

### 用医生姓名来查询可以预约医生（按时间周期排序）
#### 业务描述
用医生姓名来查询可以预约医生（按时间周期排序）

#### 接口依赖

#### 边界异常说明
无

#### 输入


#### 前置检查


####  权限检查

####  逻辑处理


#### 数据库变更

####  事务处理


####  输出
1. 可预约医生列表

            **/
            
            
              Future<com.isuwang.dapeng.json.demo.domain.AppointmentDoctorsResponse> listAppointmentForDoctorName( com.isuwang.dapeng.json.demo.domain.ListAppointmentForDoctorNameRequest listAppointmentForDoctorNameRequest , long timeout) throws com.isuwang.dapeng.core.SoaException;
            
          
            /**
            * 

### 按日期查询可以预约医生列表
#### 业务描述
按医生查询可以预约列表

#### 接口依赖

#### 边界异常说明
无

#### 输入
1、医生id
2、日期

#### 前置检查


####  权限检查

####  逻辑处理


#### 数据库变更

####  事务处理


####  输出
1. 可预时间列表

            **/
            
            
              Future<com.isuwang.dapeng.json.demo.domain.AppointmentDoctorsByDateResponse> listAppointmentDoctorsByDate( com.isuwang.dapeng.json.demo.domain.AppointmentDoctorsByDateRequest request , long timeout) throws com.isuwang.dapeng.core.SoaException;
            
          
            /**
            * 

### 医生查询已预约的患者列表
#### 业务描述
医生查询已预约的患者列表

#### 接口依赖

#### 边界异常说明
无

#### 输入
1、订单状态 hasTreated ：是否已经治疗 true：已治疗 false :未治疗


#### 前置检查


####  权限检查

####  逻辑处理


#### 数据库变更

####  事务处理


####  输出
1. 患者列表

            **/
            
            
              Future<com.isuwang.dapeng.json.demo.domain.ListAppointmentPatientResponse> listAppointmentPatients( com.isuwang.dapeng.json.demo.domain.ListAppointmentPatientRequest request , long timeout) throws com.isuwang.dapeng.core.SoaException;
            
          
            /**
            * 

### 查询(今日)值班医生列表
#### 业务描述
查询值班医生列表

#### 接口依赖

#### 边界异常说明
无

#### 输入

#### 前置检查


####  权限检查

####  逻辑处理


#### 数据库变更

####  事务处理


####  输出
1. 医生列表

            **/
            
            
              Future<com.isuwang.dapeng.json.demo.domain.ListDoctorOnDutyResponse> listDoctorOnDuty( com.isuwang.dapeng.json.demo.domain.PageRequest pageRequest , long timeout) throws com.isuwang.dapeng.core.SoaException;
            
          
            /**
            * 

### 预约日历
#### 业务描述
当前一个月预约日历

#### 接口依赖

#### 边界异常说明
无

#### 输入

#### 前置检查


####  权限检查

####  逻辑处理


#### 数据库变更

####  事务处理


####  输出
1. 可以预约日期

            **/
            
            
              Future<java.util.List<String>> listAppointmentCalendar( com.isuwang.dapeng.json.demo.domain.ListAppointmentCalendarRequest request , long timeout) throws com.isuwang.dapeng.core.SoaException;
            
          
            /**
            * 

### 医生领取排班的日历
#### 业务描述
当前一个月排班日历

#### 接口依赖

#### 边界异常说明
无

#### 输入

#### 前置检查


####  权限检查

####  逻辑处理


#### 数据库变更

####  事务处理


####  输出
1. 可以预约日期

            **/
            
            
              Future<java.util.List<String>> listAppointmentCalendarForDoctor(  long timeout) throws com.isuwang.dapeng.core.SoaException;
            
          
            /**
            * 

### 查询可以预约医生（按时间周期排序）
#### 业务描述
查询可以预约医生（按时间周期排序）

#### 接口依赖

#### 边界异常说明
无

#### 输入


#### 前置检查


####  权限检查

####  逻辑处理


#### 数据库变更

####  事务处理


####  输出
1. 可预约医生列表

            **/
            
            
              Future<com.isuwang.dapeng.json.demo.domain.ListAppointmentsByDoctorIdResponse> listAppointmentsByDoctorId( com.isuwang.dapeng.json.demo.domain.ListAppointmentsByDoctorIdRequest request , long timeout) throws com.isuwang.dapeng.core.SoaException;
            
          
            /**
            * 

      ### 查询排班记录信息
      #### 业务描述
      查询排班记录信息

      #### 接口依赖

      #### 边界异常说明
      无

      #### 输入
        appointmentId

      #### 前置检查

      ####  权限检查

      ####  逻辑处理


      #### 数据库变更

      ####  事务处理


      ####  输出
      1. 排班记录信息

            **/
            
            
              Future<com.isuwang.dapeng.json.demo.domain.AppointmentItem> getAppointmentItem( Integer appointmentId , long timeout) throws com.isuwang.dapeng.core.SoaException;
            
          
            /**
            * 

### 查询医生排班记录信息(包括未安排的时间段)
#### 业务描述
1、查询医生排班记录信息(包括未安排的时间段)
2、医生排班管理列表

#### 接口依赖

#### 边界异常说明
无

#### 输入
appointmentId

#### 前置检查

####  权限检查

####  逻辑处理


#### 数据库变更

####  事务处理


####  输出
1. 医生排班记录信息

            **/
            
            
              Future<java.util.List<com.isuwang.dapeng.json.demo.domain.AppointmentTimeItem>> listAppointmentTimeForDoctor( com.isuwang.dapeng.json.demo.domain.ListAppointmentTimeForDoctorRequest request , long timeout) throws com.isuwang.dapeng.core.SoaException;
            
          
            /**
            * 

    ### 医生首页通知
    #### 业务描述
    医生首页通知(各种待办记录的数量)

    #### 接口依赖

    #### 边界异常说明
    无

    #### 输入

    #### 前置检查

    ####  权限检查

    ####  逻辑处理


    #### 数据库变更

    ####  事务处理


    ####  输出
     1、我的预约： 已完成支付但没开始的订单数量

            **/
            
            
              Future<com.isuwang.dapeng.json.demo.domain.DoctorHomePageNotice> getDoctorHomePageNotice(  long timeout) throws com.isuwang.dapeng.core.SoaException;
            
          
            /**
            * 

       ### 患者首页通知
       #### 业务描述
       患者首页通知(各种待办记录的数量)

       #### 接口依赖

       #### 边界异常说明
       无

       #### 输入

       #### 前置检查

       ####  权限检查

       ####  逻辑处理


       #### 数据库变更

       ####  事务处理


       ####  输出
       1、排队候诊 该用户已完成支付但没开始治疗的订单数量
       2、诊断报告： 未读的诊断报告数量
       3、订单缴费： 已创建但没支付的订单数量

            **/
            
            
              Future<com.isuwang.dapeng.json.demo.domain.PatientHomePageNotice> getPatientHomePageNotice(  long timeout) throws com.isuwang.dapeng.core.SoaException;
            
          
            /**
            * 

     ### 阅读诊断报告
     #### 业务描述
     阅读诊断报告

     #### 接口依赖

     #### 边界异常说明
     无

     #### 输入
      1、排队候诊 该用户已完成支付但没开始治疗的订单数量
     #### 前置检查

     ####  权限检查

     ####  逻辑处理


     #### 数据库变更

     ####  事务处理


     ####  输出
     1. 患者首页通知

            **/
            
            
              Future<Void> readDiagnose( Integer diagnoseId , long timeout) throws com.isuwang.dapeng.core.SoaException;
            
          
            /**
            * 

     ### 获取诊断报告
     #### 业务描述
     获取一份诊断报告

     #### 接口依赖

     #### 边界异常说明
     无

     #### 输入

     #### 前置检查

     ####  权限检查

     ####  逻辑处理


     #### 数据库变更

     ####  事务处理


     ####  输出
     1. 患者首页通知

            **/
            
            
              Future<com.isuwang.dapeng.json.demo.domain.DiagnoseItem> getDiagnoseItem( Integer diagnoseId , long timeout) throws com.isuwang.dapeng.core.SoaException;
            
          
            /**
            * 

     ### 获取订单的微信支付对象
     #### 业务描述
     获取订单的微信支付对象

     #### 接口依赖

     #### 边界异常说明
     无

     #### 输入

     #### 前置检查

     ####  权限检查

     ####  逻辑处理


     #### 数据库变更

     ####  事务处理


     ####  输出
     1. 支付对象

            **/
            
            
              Future<com.isuwang.dapeng.json.demo.domain.OrderForWxResponse> getOrderForWx( Integer orderId , long timeout) throws com.isuwang.dapeng.core.SoaException;
            
          
            /**
            * 

     ### 微信回调处理方法
     #### 业务描述
     微信回调处理方法

     #### 接口依赖

     #### 边界异常说明
     无

     #### 输入

     #### 前置检查

     ####  权限检查

     ####  逻辑处理


     #### 数据库变更

     ####  事务处理


     ####  输出
     1. 微信回调的XML字符串

            **/
            
            
              Future<String> payNotifyForWx( String wxNotifyString , long timeout) throws com.isuwang.dapeng.core.SoaException;
            
          
            /**
            * 

     ### 获取订单的支付宝支付字符串
     #### 业务描述
     获取订单的支付宝支付字符串

     #### 接口依赖

     #### 边界异常说明
     无

     #### 输入

     #### 前置检查

     ####  权限检查

     ####  逻辑处理


     #### 数据库变更

     ####  事务处理


     ####  输出
     1. 支付字符串

            **/
            
            
              Future<String> getOrderForAlipay( Integer orderId , long timeout) throws com.isuwang.dapeng.core.SoaException;
            
          
            /**
            * 

     ### 支付宝回调处理方法
     #### 业务描述
     支付宝回调处理方法

     #### 接口依赖

     #### 边界异常说明
     无

     #### 输入

     #### 前置检查

     ####  权限检查

     ####  逻辑处理


     #### 数据库变更

     ####  事务处理


     ####  输出
     1. 支付宝回调的字符串

            **/
            
            
              Future<String> payNotifyForAlipay( java.util.Map<String, String> params , long timeout) throws com.isuwang.dapeng.core.SoaException;
            
          
            /**
            * 

    ### 结束诊断会话
    #### 业务描述
     结束诊断会话，把订单状态修改为诊断结束
    #### 接口依赖

    #### 边界异常说明
    无

    #### 输入

    #### 前置检查


    ####  权限检查

    ####  逻辑处理


    #### 数据库变更

    ####  事务处理

    ####  输出


            **/
            
            
              Future<Void> diagnoseFinish( com.isuwang.dapeng.json.demo.domain.DiagnoseFinishRequest request , long timeout) throws com.isuwang.dapeng.core.SoaException;
            
          
            /**
            * 

    ### 重做异常单
    #### 业务描述
     1、因排班问题或者是诊断是通话不顺畅需要重约时间再会诊

    #### 接口依赖

    #### 边界异常说明
    无

    #### 输入

    #### 前置检查
     1、需要已支付的预约订单才能购重新预约

    ####  权限检查

    ####  逻辑处理
     1、重新预约的订单直接跳过支付流程到等待就诊状态（但保留支付类型和金额信息），并且关联原订单(parent_id)
     2、原订单状态置为 12:异常取消(exception_cancel)

    #### 数据库变更

    ####  事务处理

    ####  输出


            **/
            
            
              Future<com.isuwang.dapeng.json.demo.domain.OrderItem> redoExceptionOrder( com.isuwang.dapeng.json.demo.domain.RedoExceptionOrderRequest request , long timeout) throws com.isuwang.dapeng.core.SoaException;
            
          
            /**
            * 

    ### 添加线下患者
    #### 业务描述
     添加线下患者
    #### 接口依赖

    #### 边界异常说明
    无

    #### 输入

    #### 前置检查


    ####  权限检查

    ####  逻辑处理


    #### 数据库变更

    ####  事务处理

    ####  输出


            **/
            
            
              Future<Integer> createOfflinePatient( com.isuwang.dapeng.json.demo.domain.CreateOfflinePatientRequest request , long timeout) throws com.isuwang.dapeng.core.SoaException;
            
          
            /**
            * 

    ### 获取线下患者信息
    #### 业务描述
     获取线下患者信息
    #### 接口依赖

    #### 边界异常说明
    无

    #### 输入
        1. id 或 手机号码 二选一

    #### 前置检查


    ####  权限检查

    ####  逻辑处理


    #### 数据库变更

    ####  事务处理

    ####  输出
       1. 线下患者信息

            **/
            
            
              Future<com.isuwang.dapeng.json.demo.domain.OfflinePatientResponse> getOfflinePatient( com.isuwang.dapeng.json.demo.domain.GetOfflinePatientRequest request , long timeout) throws com.isuwang.dapeng.core.SoaException;
            
          
            /**
            * 

    ### 添加线下订单服务
    #### 业务描述
     添加线下订单服务
    #### 接口依赖

    #### 边界异常说明
    无

    #### 输入

    #### 前置检查


    ####  权限检查

    ####  逻辑处理


    #### 数据库变更

    ####  事务处理

    ####  输出


            **/
            
            
              Future<Integer> createOrderForOffline( com.isuwang.dapeng.json.demo.domain.CreateOrderForOffLineRequest request , long timeout) throws com.isuwang.dapeng.core.SoaException;
            
          
            /**
            * 

   ### 编辑线下订单
   #### 业务描述
    编辑线下订单服务
   #### 接口依赖

   #### 边界异常说明
    无

   #### 输入

   #### 前置检查


   ####  权限检查

   ####  逻辑处理


   #### 数据库变更

   ####  事务处理

   ####  输出


            **/
            
            
              Future<Void> modifyOrderForOffline( com.isuwang.dapeng.json.demo.domain.ModifyOrderForOfflineRequest request , long timeout) throws com.isuwang.dapeng.core.SoaException;
            
          
            /**
            * 

   ### 编辑线下订单状态
   #### 业务描述
    编辑线下订单状态的服务
   #### 接口依赖

   #### 边界异常说明
    无

   #### 输入

   #### 前置检查


   ####  权限检查

   ####  逻辑处理


   #### 数据库变更

   ####  事务处理

   ####  输出


            **/
            
            
              Future<Void> modifyOrderStatusForOffline( com.isuwang.dapeng.json.demo.domain.ModifyOrderStatusRequest request , long timeout) throws com.isuwang.dapeng.core.SoaException;
            
          
            /**
            * 

### 患者端首页显示医生的相关推荐信息
#### 业务描述
查询患者端首页显示医生的相关推荐信息
#### 接口依赖

#### 边界异常说明
无

#### 输入

#### 前置检查


####  权限检查

####  逻辑处理


#### 数据库变更

####  事务处理

####  输出


            **/
            
            
              Future<com.isuwang.dapeng.json.demo.domain.PatientHomePageInfoResponse> getPatientHomePageInfo( com.isuwang.dapeng.json.demo.domain.PatientHomePageInfoRequest request , long timeout) throws com.isuwang.dapeng.core.SoaException;
            
          
            /**
            * 

### 患者端首页显示滚动通知信息
#### 业务描述
查询患者端首页显示滚动通知信息
#### 接口依赖
#### 边界异常说明
无
#### 输入
#### 前置检查
####  权限检查
####  逻辑处理
#### 数据库变更
####  事务处理
####  输出


            **/
            
            
              Future<com.isuwang.dapeng.json.demo.domain.PatientHomePageSliderNoticeResponse> getPatientHomePageSliderNotice( com.isuwang.dapeng.json.demo.domain.PatientHomePageSliderNoticeRequest request , long timeout) throws com.isuwang.dapeng.core.SoaException;
            
          
            /**
            * 

### 保存患者推荐信息
#### 业务描述
  保存患者症状
#### 接口依赖
#### 边界异常说明
#### 输入

#### 前置检查

#### 权限检查
#### 逻辑处理

#### 数据变更
   1.

#### 事务处理
#### 输出
   1.void

            **/
            
            
              Future<Void> saveRecommends( com.isuwang.dapeng.json.demo.domain.SaveRecommendsRequest request , long timeout) throws com.isuwang.dapeng.core.SoaException;
            
          
            /**
            * 

### 查询患者推荐信息
#### 业务描述
  保存患者症状
#### 接口依赖
#### 边界异常说明
#### 输入

#### 前置检查

#### 权限检查
#### 逻辑处理

#### 数据变更
   1.

#### 事务处理
#### 输出
   1.void

            **/
            
            
              Future<com.isuwang.dapeng.json.demo.domain.ListRecommendsRespone> listRecommends( com.isuwang.dapeng.json.demo.domain.ListRecommendsRequest request , long timeout) throws com.isuwang.dapeng.core.SoaException;
            
          
            /**
            * 

    ### 查询文章阅读数量
    #### 业务描述
      查询文章阅读数量
    #### 接口依赖
    #### 边界异常说明
    #### 输入
        articleId
    #### 前置检查

    #### 权限检查
    #### 逻辑处理

    #### 数据变更
       1.

    #### 事务处理
    #### 输出
       1.文章阅读数量

            **/
            
            
              Future<Integer> getArticleReadership( Integer articleId , long timeout) throws com.isuwang.dapeng.core.SoaException;
            
          
            /**
            * 

    ### 阅读文章并返回阅读次数
    #### 业务描述
    阅读文章，文章阅读书+1
    #### 接口依赖
    #### 边界异常说明
    #### 输入
    articleId
    #### 前置检查

    #### 权限检查
    #### 逻辑处理

    #### 数据变更
    1.

    #### 事务处理
    #### 输出
    1.文章阅读数量

            **/
            
            
              Future<Integer> readArticle( Integer articleId , long timeout) throws com.isuwang.dapeng.core.SoaException;
            
          
            /**
            * 

    ### 价格规则表列表查询
    #### 业务描述
   价格规则表列表
    #### 接口依赖
    #### 边界异常说明
    #### 输入
    articleId
    #### 前置检查

    #### 权限检查
    #### 逻辑处理

    #### 数据变更
    1.

    #### 事务处理
    #### 输出
    1.价格规则表列表

            **/
            
            
              Future<com.isuwang.dapeng.json.demo.domain.ListPriceRuleResponse> listPriceRule( com.isuwang.dapeng.json.demo.domain.ListPriceRuleRequest request , long timeout) throws com.isuwang.dapeng.core.SoaException;
            
          
            /**
            * 

    ### 价格规则表修改
    #### 业务描述
   价格规则表列表
    #### 接口依赖
    #### 边界异常说明
    #### 输入
    articleId
    #### 前置检查

    #### 权限检查
    #### 逻辑处理

    #### 数据变更
    1.

    #### 事务处理
    #### 输出
    void

            **/
            
            
              Future<Void> modifyPriceRule( com.isuwang.dapeng.json.demo.domain.TPriceRuleDTO request , long timeout) throws com.isuwang.dapeng.core.SoaException;
            
          
            /**
            * 

    ### 价格规则表添加
    #### 业务描述
    添加价格规则表
    #### 接口依赖
    #### 边界异常说明
    #### 输入
    articleId
    #### 前置检查

    #### 权限检查
    #### 逻辑处理

    #### 数据变更
    1.

    #### 事务处理
    #### 输出
    void

            **/
            
            
              Future<Void> savePriceRule( com.isuwang.dapeng.json.demo.domain.TPriceRuleDTO request , long timeout) throws com.isuwang.dapeng.core.SoaException;
            
          
            /**
            * 

    ### 查询医生的诊疗套餐价格
    #### 业务描述
    查询医生的诊疗套餐价格，如果已购买了图文咨询套餐则返回已购买标志
    #### 接口依赖
    #### 边界异常说明
    #### 输入

    #### 前置检查

    #### 权限检查
    #### 逻辑处理

    #### 数据变更
    1.

    #### 事务处理
    #### 输出
    void

            **/
            
            
              Future<java.util.List<com.isuwang.dapeng.json.demo.domain.PackageChargeItem>> listPackageChargesByDoctorId( Integer doctorId , long timeout) throws com.isuwang.dapeng.core.SoaException;
            
          
            /**
            * 

    ### 查询医生的诊疗套餐
    #### 业务描述
    #### 接口依赖
    #### 边界异常说明
    #### 输入

    #### 前置检查

    #### 权限检查
    #### 逻辑处理

    #### 数据变更
    1.

    #### 事务处理
    #### 输出
    void

            **/
            
            
              Future<com.isuwang.dapeng.json.demo.domain.GetPackageInfoResponse> getPackageInfo( com.isuwang.dapeng.json.demo.domain.GetPackageInfoRequest request , long timeout) throws com.isuwang.dapeng.core.SoaException;
            
          
            /**
            * 

        ### 购买诊疗套餐
        #### 业务描述
        #### 接口依赖
        #### 边界异常说明
        #### 输入

        #### 前置检查

        #### 权限检查
        #### 逻辑处理

        #### 数据变更
        1.

        #### 事务处理
        #### 输出
        void

            **/
            
            
              Future<com.isuwang.dapeng.json.demo.domain.OrderItem> buyPackage( com.isuwang.dapeng.json.demo.domain.BuyPackageRequest request , long timeout) throws com.isuwang.dapeng.core.SoaException;
            
          
            /**
            * 
            **/
            
            
              Future<com.isuwang.dapeng.json.demo.domain.ListTextPackOrderForDoctorResponse> listTextPackOrderForDoctor( com.isuwang.dapeng.json.demo.domain.ListTextPackOrderForDoctorRequest request , long timeout) throws com.isuwang.dapeng.core.SoaException;
            
          
            /**
            * 

        ### 查询订购了医生的图文咨询包月服务的患者数量
        #### 业务描述
           查询关注记录
        #### 接口依赖
        #### 边界异常说明
        #### 输入

        #### 前置检查

        #### 权限检查
         仅允许医生进行该操作
        #### 逻辑处理

        #### 数据变更
            1.

        #### 事务处理
        #### 输出


            **/
            
            
              Future<com.isuwang.dapeng.json.demo.domain.CountBuyTextPackPatientsResponse> countBuyTextPackPatients( Integer doctorId , long timeout) throws com.isuwang.dapeng.core.SoaException;
            
          
            /**
            * 

    ### 判断是否可以聊天对话
    #### 业务描述
       判断医生和患者是否可以聊天对话
       1、医生请求时，如果可以对话，返回可以对话时间以及患者信息
       2、患者请求时，如果可以对话，返回可以对话时间以及医生信息
    #### 接口依赖
    #### 边界异常说明
    #### 输入

    #### 前置检查

    #### 权限检查
     登陆的医生或者患者
    #### 逻辑处理

    #### 数据变更
        1.

    #### 事务处理
    #### 输出


            **/
            
            
              Future<com.isuwang.dapeng.json.demo.domain.JudgeChatAbleResponse> judgeChatAble( com.isuwang.dapeng.json.demo.domain.JudgeChatAbleRequest request , long timeout) throws com.isuwang.dapeng.core.SoaException;
            
          
            /**
            * 

         ### 发放优惠券
         #### 业务描述
         给患者发放优惠券
         #### 接口依赖
         #### 边界异常说明
         #### 输入

         #### 前置检查

         #### 权限检查
         #### 逻辑处理

         #### 数据变更
         1.

         #### 事务处理
         #### 输出
         1.

            **/
            
            
              Future<Void> giveCoupon( com.isuwang.dapeng.json.demo.domain.GiveCouponRequest request , long timeout) throws com.isuwang.dapeng.core.SoaException;
            
          
            /**
            * 

         ### 批量发放优惠券
         #### 业务描述
         批量给患者发放优惠券
         #### 接口依赖
         #### 边界异常说明
         #### 输入

         #### 前置检查

         #### 权限检查
         #### 逻辑处理

         #### 数据变更
         1.

         #### 事务处理
         #### 输出
         1.

            **/
            
            
              Future<Void> batchGiveCoupon( java.util.List<com.isuwang.dapeng.json.demo.domain.GiveCouponRequest> request , long timeout) throws com.isuwang.dapeng.core.SoaException;
            
          
            /**
            * 

          ### 查询客户可使用的优惠卷
          #### 业务描述
          查询客户可使用的优惠卷
          #### 接口依赖
          #### 边界异常说明
          #### 输入

          #### 前置检查

          #### 权限检查
          #### 逻辑处理

          #### 数据变更
          1.

          #### 事务处理
          #### 输出
          1.

            **/
            
            
              Future<java.util.List<com.isuwang.dapeng.json.demo.domain.TCouponDTO>> listAvaliableCoupons( com.isuwang.dapeng.json.demo.domain.ListAvaliableCouponsRequest request , long timeout) throws com.isuwang.dapeng.core.SoaException;
            
          
            /**
            * 

    ### 查询最新的知心陪护订单
    #### 业务描述
       查询最新的知心陪护订单

    #### 接口依赖
    #### 边界异常说明
    #### 输入
       输入用户Id

    #### 前置检查

    #### 权限检查
     登陆的医生或者患者
    #### 逻辑处理

    #### 数据变更
        1.

    #### 事务处理
    #### 输出


            **/
            
            
              Future<java.util.List<com.isuwang.dapeng.json.demo.domain.OrderItem>> findAccompanyOrderByPatientId( Integer patientId , long timeout) throws com.isuwang.dapeng.core.SoaException;
            
          
            /**
            * 

    ### 创建知心陪护订单
    #### 业务描述
       创建的知心陪护订单

    #### 接口依赖
    #### 边界异常说明
    #### 输入
       输入用户Id

    #### 前置检查

    #### 权限检查
     登陆的医生或者患者
    #### 逻辑处理

    #### 数据变更
        1.

    #### 事务处理
    #### 输出


            **/
            
            
              Future<com.isuwang.dapeng.json.demo.domain.OrderItem> createAccompanyOrder( com.isuwang.dapeng.json.demo.domain.CreateAccompanyOrderRequest request , long timeout) throws com.isuwang.dapeng.core.SoaException;
            
          
            /**
            * 

    ### 获取知心陪护订单的参数
    #### 业务描述
       下单页面，获取知心陪护订单的参数

    #### 接口依赖
    #### 边界异常说明
    #### 输入


    #### 前置检查

    #### 权限检查

    #### 逻辑处理

    #### 数据变更

    #### 事务处理
    #### 输出
        知心陪护下单参数


            **/
            
            
              Future<java.util.List<com.isuwang.dapeng.json.demo.domain.AccompanyOrderParam>> getAccompanyOrderParams(  long timeout) throws com.isuwang.dapeng.core.SoaException;
            
          
            /**
            * 

        ### 获取心理保健套餐（优惠券）订单的参数
        #### 业务描述
           下单页面，获取心理保健套餐（优惠券）订单的参数

        #### 接口依赖
        #### 边界异常说明
        #### 输入


        #### 前置检查

        #### 权限检查

        #### 逻辑处理

        #### 数据变更

        #### 事务处理
        #### 输出
           心理保健套餐（优惠券）下单参数


            **/
            
            
              Future<com.isuwang.dapeng.json.demo.domain.CouponOrderParams> getCouponOrderParams(  long timeout) throws com.isuwang.dapeng.core.SoaException;
            
          
            /**
            * 

    ### 获取知心陪护最新首页数据
    #### 业务描述
       获取知心陪护最新首页数据


    #### 接口依赖
    #### 边界异常说明
    #### 输入


    #### 前置检查

    #### 权限检查

    #### 逻辑处理

    #### 数据变更

    #### 事务处理
    #### 输出
       1.当前客服信息
       2.陪护结束日期
       3.消息数
       4.预约数

            **/
            
            
              Future<com.isuwang.dapeng.json.demo.domain.GetPatientCaregiverHomePageInfoResponse> getPatientCaregiverHomePageInfo( Integer patientId , long timeout) throws com.isuwang.dapeng.core.SoaException;
            
          
            /**
            * 

    ### 体验码 体验陪护七天
    #### 业务描述
       体验码 体验陪护七天

    #### 接口依赖
    #### 边界异常说明
    #### 输入


    #### 前置检查

    #### 权限检查

    #### 逻辑处理

    #### 数据变更

    #### 事务处理
    #### 输出
        知心陪护订单详情


            **/
            
            
              Future<com.isuwang.dapeng.json.demo.domain.OrderItem> createAccompanyOrderByCode( String code , long timeout) throws com.isuwang.dapeng.core.SoaException;
            
          
            /**
            * 

### 治疗心理咨询师推荐
#### 业务描述
治疗心理咨询师推荐
 1、自动匹配一个最近可预约的咨询师
 2、如果用户以前预约过，优先配预约过的
 3、点击换一换，按咨询是最近可以预约时间依次替换
#### 接口依赖

#### 边界异常说明
无

#### 输入


#### 前置检查


####  权限检查

####  逻辑处理


#### 数据库变更

####  事务处理


####  输出
1. 可预约医生列表

            **/
            
            
              Future<com.isuwang.dapeng.json.demo.domain.AppointmentDoctorsResponse> recommendTreatDoctors( com.isuwang.dapeng.json.demo.domain.PageRequest pageRequest , long timeout) throws com.isuwang.dapeng.core.SoaException;
            
          
            /**
            * 

    ### 创建体验码
    #### 业务描述
       创建体验码

    #### 接口依赖
    #### 边界异常说明
    #### 输入
        输入生成多少个体验码

    #### 前置检查

    #### 权限检查

    #### 逻辑处理
        遇到生成失败的，即体验码已存在的，忽略处理

    #### 数据变更

    #### 事务处理
    #### 输出
        成功生成多少个


            **/
            
            
              Future<Integer> createExperienceCoupon( Integer number , long timeout) throws com.isuwang.dapeng.core.SoaException;
            
          
            /**
            * 

    ### 体验码列表
    #### 业务描述
       体验码列表

    #### 接口依赖
    #### 边界异常说明
    #### 输入

    #### 前置检查

    #### 权限检查

    #### 逻辑处理

    #### 数据变更

    #### 事务处理
    #### 输出
        list


            **/
            
            
              Future<com.isuwang.dapeng.json.demo.domain.ListExperienceCouponResponse> listExperienceCoupon( com.isuwang.dapeng.json.demo.domain.ListExperienceCouponRequest request , long timeout) throws com.isuwang.dapeng.core.SoaException;
            
          
      }
      