 package com.isuwang.dapeng.json.demo.domain.serializer;
        import com.isuwang.dapeng.json.demo.domain.serializer.*;

        import com.isuwang.dapeng.core.*;
        import com.isuwang.org.apache.thrift.*;
        import com.isuwang.org.apache.thrift.protocol.*;

        import java.util.Optional;
        import java.util.concurrent.CompletableFuture;
        import java.util.concurrent.Future;

        /**
        * Autogenerated by Dapeng-Code-Generator (1.2.2)
        *
        * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
        *  @generated
        **/
        public class BatchAppointmentRequestSerializer implements BeanSerializer<com.isuwang.dapeng.json.demo.domain.BatchAppointmentRequest>{
        
      @Override
      public com.isuwang.dapeng.json.demo.domain.BatchAppointmentRequest read(TProtocol iprot) throws TException{

      com.isuwang.dapeng.json.demo.domain.BatchAppointmentRequest bean = new com.isuwang.dapeng.json.demo.domain.BatchAppointmentRequest();
      com.isuwang.org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();

      while(true){
        schemeField = iprot.readFieldBegin();
        if(schemeField.type == com.isuwang.org.apache.thrift.protocol.TType.STOP){ break;}

        switch(schemeField.id){
          
              case 1:
              if(schemeField.type == com.isuwang.org.apache.thrift.protocol.TType.I32){
               int elem0 = iprot.readI32();
       bean.setDoctorId(elem0);
            }else{
              com.isuwang.org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
              break;
            
              case 3:
              if(schemeField.type == com.isuwang.org.apache.thrift.protocol.TType.MAP){
              com.isuwang.org.apache.thrift.protocol.TMap _map0 = iprot.readMapBegin();
        java.util.Map<Integer,Boolean> elem0 = new java.util.HashMap<>(_map0.size);
        for(int _i0 = 0; _i0 < _map0.size; ++ _i0){
           int elem1 = iprot.readI32();
          boolean elem2 = iprot.readBool();
          elem0.put(elem1, elem2);
        }
        iprot.readMapEnd();
       bean.setAppointmentList(elem0);
            }else{
              com.isuwang.org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
              break;
            
          
            default:
            com.isuwang.org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      validate(bean);
      return bean;
    }
    
      @Override
      public void write(com.isuwang.dapeng.json.demo.domain.BatchAppointmentRequest bean, TProtocol oprot) throws TException{

      validate(bean);
      oprot.writeStructBegin(new com.isuwang.org.apache.thrift.protocol.TStruct("BatchAppointmentRequest"));

      
            oprot.writeFieldBegin(new com.isuwang.org.apache.thrift.protocol.TField("doctorId", com.isuwang.org.apache.thrift.protocol.TType.I32, (short) 1));
            Integer elem0 = bean.getDoctorId();
            oprot.writeI32(elem0);
            
            oprot.writeFieldEnd();
          
            oprot.writeFieldBegin(new com.isuwang.org.apache.thrift.protocol.TField("appointmentList", com.isuwang.org.apache.thrift.protocol.TType.MAP, (short) 3));
            java.util.Map<Integer, Boolean> elem1 = bean.getAppointmentList();
            
          oprot.writeMapBegin(new com.isuwang.org.apache.thrift.protocol.TMap(com.isuwang.org.apache.thrift.protocol.TType.I32, com.isuwang.org.apache.thrift.protocol.TType.BOOL, elem1.size()));
          for(java.util.Map.Entry<Integer, Boolean> _it1 : elem1.entrySet()){

          Integer elem2 = _it1.getKey();
          Boolean elem3 = _it1.getValue();
          oprot.writeI32(elem2);
          oprot.writeBool(elem3);
        }
          oprot.writeMapEnd();
        
            
            oprot.writeFieldEnd();
          
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }
    
      public void validate(com.isuwang.dapeng.json.demo.domain.BatchAppointmentRequest bean) throws TException{
      
              if(bean.getAppointmentList() == null)
              throw new SoaException(SoaBaseCode.NotNull, "appointmentList字段不允许为空");
            
    }
    
        @Override
        public String toString(com.isuwang.dapeng.json.demo.domain.BatchAppointmentRequest bean)
        {return bean == null ? "null" : bean.toString();}
      }
      

      