
        package com.isuwang.soa.monitor.api.service;

        import com.isuwang.dapeng.core.Processor;
        import com.isuwang.dapeng.core.Service;
        import com.isuwang.dapeng.core.SoaGlobalTransactional;

        import java.util.concurrent.Future;

        /**
         * Autogenerated by Dapeng-Code-Generator (1.2.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated

        * 

 监控服务

        **/
        @Service(name="com.isuwang.soa.monitor.api.service.MonitorService",version = "1.0.0")
        @Processor(className = "com.isuwang.soa.monitor.api.MonitorServiceAsyncCodec$Processor")
        public interface MonitorServiceAsync  extends com.isuwang.dapeng.core.definition.AsyncService {
        
            /**
            * 

 上送QPS信息

            **/
            
            
              Future<Void> uploadQPSStat(java.util.List<com.isuwang.soa.monitor.api.domain.QPSStat> qpsStats, long timeout) throws com.isuwang.dapeng.core.SoaException;
            
          
            /**
            * 

 上送平台处理数据

            **/
            
            
              Future<Void> uploadPlatformProcessData(java.util.List<com.isuwang.soa.monitor.api.domain.PlatformProcessData> platformProcessDatas, long timeout) throws com.isuwang.dapeng.core.SoaException;
            
          
            /**
            * 

 上送DataSource信息

            **/
            
            
              Future<Void> uploadDataSourceStat(java.util.List<com.isuwang.soa.monitor.api.domain.DataSourceStat> dataSourceStat, long timeout) throws com.isuwang.dapeng.core.SoaException;
            
          
      }
      